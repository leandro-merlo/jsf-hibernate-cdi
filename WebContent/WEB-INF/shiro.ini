[main]

ds = com.mysql.cj.jdbc.MysqlDataSource
ds.serverName = localhost
ds.user = root
#ds.password = 
ds.databaseName = financeiro

jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.dataSource = $ds
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT senha FROM usuario WHERE login = ?
jdbcRealm.userRolesQuery = SELECT nome FROM papel WHERE id = (SELECT papel_id FROM usuario_papel WHERE usuario_id = (SELECT id FROM usuario WHERE nome = ?))
jdbcRealm.permissionsQuery = SELECT nome FROM permissao WHERE id = (SELECT permissao_id FROM papel_permissao WHERE papel_id = (SELECT id FROM papel WHERE nome = ?))

# Configure JDBC realm password hashing.
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
jdbcRealm.credentialsMatcher = $credentialsMatcher

# Necessário para trabalhar com o JSF utilizando os Controllers
authc = org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter
# Especifica a URL de login
authc.loginUrl = /Login.xhtml
 
# nome do parâmetro da requisição para usuário; se omitido será assumido o valor 'username'
# authc.usernameParam = usuario
# nome do parâmetro da requisição para senha; se omitido será assumido o valor 'password'
# authc.passwordParam = senha
# se o usuário quiser gravar sua senha?; se omitido será assumido o valor 'rememberMe'
# authc.rememberMeParam = gravar
 
# Redirecionamento após login efetuado com sucesso
authc.successUrl  = /ConsultaLancamentos.xhtml?faces-redirect=true

[users]
#administrator=heslo, Administrator
#friendlyrepairmen=heslo, repairmen
#unfriendlyrepairmen=heslo, repairmen
#mathematician=heslo, scientist
#physicien=heslo, scientist
#productsales=heslo, sales
#servicessales=heslo, sales
 
[urls]
# habilita o filtro authc para todas as páginas, porém, ignora os arquivos de recurso do jsf, senão ele não carrega estilos, imagens e scripts
/javax.faces.resource/** = anon
/**=authc